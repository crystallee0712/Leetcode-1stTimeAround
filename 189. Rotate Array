Rotate an array of n elements to the right by k steps.

For example, with n = 7 and k = 3, the array [1,2,3,4,5,6,7] is rotated to [5,6,7,1,2,3,4].

Note:
Try to come up as many solutions as you can, there are at least 3 different ways to solve this problem.

Java:

class Solution {
    public void rotate(int[] nums, int k) {
      int k = k%nums.length;
      reverse(nums, 0, nums.length-1);
      reverse(nums, 0, k);
      reverse(nums, k, nums.length-1);
      
    public void reverse(int[] nums, int start, int end) {
      int temp = 0;
      for (int i = 0; i < nums.length; i++) {
          temp = nums[start];
          nums[start] = nums[end];
          nums[end] = temp;
          start++;
          end--;
      }
    }
}
 
 
 
Python: 

class Solution(object):
    def rotate(self, nums, k):
        """
        :type nums: List[int]
        :type k: int
        :rtype: void Do not return anything, modify nums in-place instead.
        """
        k = k % len(nums)
        nums[:k], nums[k:] = nums[len(nums)-k:], nums[:len(nums)-k]

